---
name: 02 Continuous Delivery
on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose Environment'
        required: true
        default: 'All'
        type: choice
        options:
          - 'All'
          - dev
          # - test
          # - prod
      terraform_action:
        description: 'Terraform Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - 'apply'
          - 'destroy'
      terraform_cli_version:
        description: 'Terraform CLI Version'
        required: true
        default: 'latest'
        type: string      

jobs:
  dev_plan_and_apply:
    uses: ./.github/workflows/cd-template.yaml
    name: Development
    
    if: ${{ (inputs.environment || 'All') == 'All' || (inputs.environment || 'All') == 'dev' }}
    permissions:
      id-token: write
      contents: read
    with:
      terraform_action: ${{ inputs.terraform_action }}
      root_module_folder_relative_path: './infra/azure/resources'
      name: dev
      display_name: Development
      runner_name: ubuntu-latest
      environment_name_plan: dev-plan
      environment_name_apply: dev-apply
      dependent_environment: 
      backend_azure_storage_account_container_name: dev
      terraform_cli_version: ${{ inputs.terraform_cli_version }}
      personal_access_token: ${{ secrets.ACCESS_TOKEN_FOR_TERRAFORM }}

  # test_plan_and_apply:
  #   uses: ./.github/workflows/cd-template.yaml
  #   name: Test
  #   needs: dev_plan_and_apply
  #   if: ${{ always() && ((inputs.environment || 'All') == 'All' || (inputs.environment || 'All') == 'test') && (needs.dev_plan_and_apply.result == 'success' || needs.dev_plan_and_apply.result == 'skipped') }}
  #   permissions:
  #     id-token: write
  #     contents: read
  #   with:
  #     terraform_action: ${{ inputs.terraform_action }}
  #     root_module_folder_relative_path: './infra/azure/resources'
  #     name: test
  #     display_name: Test
  #     runner_name: ubuntu-latest
  #     environment_name_plan: test-plan
  #     environment_name_apply: test-apply
  #     dependent_environment: dev
  #     backend_azure_storage_account_container_name: test
  #     terraform_cli_version: ${{ inputs.terraform_cli_version }}
  #     personal_access_token: ${{ secrets.ACCESS_TOKEN_FOR_TERRAFORM }}

  # prod_plan_and_apply:
  #   uses: ./.github/workflows/cd-template.yaml
  #   name: Production
  #   needs: test_plan_and_apply
  #   if: ${{ always() && ((inputs.environment || 'All') == 'All' || (inputs.environment || 'All') == 'prod') && (needs.test_plan_and_apply.result == 'success' || needs.test_plan_and_apply.result == 'skipped') }}
  #   permissions:
  #     id-token: write
  #     contents: read
  #   with:
  #     terraform_action: ${{ inputs.terraform_action }}
  #     root_module_folder_relative_path: './infra/azure/resources'
  #     name: prod
  #     display_name: Production
  #     runner_name: ubuntu-latest
  #     environment_name_plan: prod-plan
  #     environment_name_apply: prod-apply
  #     dependent_environment: test
  #     backend_azure_storage_account_container_name: prod
  #     terraform_cli_version: ${{ inputs.terraform_cli_version }}
  #     personal_access_token: ${{ secrets.ACCESS_TOKEN_FOR_TERRAFORM }}

