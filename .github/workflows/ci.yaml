---
name: 01 Continuous Integration
on:
  pull_request:
    branches:
      - main
    paths:
      - '**.tf'
  workflow_dispatch:
    inputs:
      terraform_cli_version:
        description: 'Terraform CLI Version'
        required: true
        default: 'latest'
        type: string      

jobs:
  validate:
    name: Validate Terraform
    runs-on:
      ubuntu-latest
    steps:
      - name: Validate Terraform
        uses: ./.github/workflows/validate
        with:
          root_module_folder_relative_path: './infra/azure/resources'
          terraform_cli_version: ${{ inputs.terraform_cli_version }}

  dev_plan:
    uses: ./.github/workflows/ci-template.yaml
    name: Development
    needs: validate
    permissions:
      id-token: write
      contents: read
    with:
      root_module_folder_relative_path: './infra/azure/resources'
      name: dev
      display_name: Development
      runner_name: ubuntu-latest
      environment_name_plan: dev-plan
      environment_name_apply: dev-apply
      dependent_environment: 
      backend_azure_storage_account_container_name: dev
      terraform_cli_version: ${{ inputs.terraform_cli_version }}

  # test_plan:
  #   uses: ./.github/workflows/ci-template.yaml
  #   name: Test
  #   needs: validate
  #   permissions:
  #     id-token: write
  #     contents: read
  #   with:
  #     root_module_folder_relative_path: './infra/azure/resources'
  #     name: test
  #     display_name: Test
  #     runner_name: ubuntu-latest
  #     environment_name_plan: test-plan
  #     environment_name_apply: test-apply
  #     dependent_environment: dev
  #     backend_azure_storage_account_container_name: test
  #     terraform_cli_version: ${{ inputs.terraform_cli_version }}

  # prod_plan:
  #   uses: ./.github/workflows/ci-template.yaml
  #   name: Production
  #   needs: validate
  #   permissions:
  #     id-token: write
  #     contents: read
  #   with:
  #     root_module_folder_relative_path: './infra/azure/resources'
  #     name: prod
  #     display_name: Production
  #     runner_name: ubuntu-latest
  #     environment_name_plan: prod-plan
  #     environment_name_apply: prod-apply
  #     dependent_environment: test
  #     backend_azure_storage_account_container_name: prod
  #     terraform_cli_version: ${{ inputs.terraform_cli_version }}

